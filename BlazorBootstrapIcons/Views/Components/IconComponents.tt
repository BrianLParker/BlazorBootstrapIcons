<#@ template debug="false" hostspecific="true" language="C#" encoding="utf-8" #>
<#@ output extension=".cs" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ assembly name="System.Core"#>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<# 
    DTE dte = ((IServiceProvider)this.Host).GetCOMService(typeof(DTE)) as DTE;
    string someJson = File.ReadAllText(this.Host.ResolvePath(@"..\..\wwwroot\images\bootstrap-icons\bootstrap-icons.json"));
    Dictionary<string, int> values = JsonConvert.DeserializeObject<Dictionary<string, int>>(someJson);
    List<string> origNames = values.Select(a => a.Key).ToList();
    Dictionary<string,string> namePairDictionary = new Dictionary<string,string>();
    string appNamespace = dte.Solution.FindProjectItem(this.Host.TemplateFile).Properties.Item("DefaultNamespace").Value.ToString();
    foreach(var name in origNames)
    {
        var segments = name.Split('-');
        for(int i = 0; i < segments.Length ; i++)
        {
           var segStart = segments[i].Substring(0,1).ToUpper();
           var segTail = segments[i].Substring(1);
           segments[i] = segStart + segTail;
        }
        string parsedName = segments.Aggregate( (a, b) => a + b );
        string newName = parsedName;

        if( newName == "123" )
        {
            newName = "OneTwoThree";
        }
        
        namePairDictionary[newName]=name;
    }
    #>
// ------------------------------------------------------------
// Copyright (c) 2022, Brian Parker All rights reserved.
// Licensed under the MIT License.
// See License.txt in the project root for license information.
// ------------------------------------------------------------

namespace <#= Host.ResolveParameterValue("Template1", "Template1", "projectDefaultNamespace") #>.Views.Components.Icons;

<# foreach(var name in namePairDictionary) { #>
public class <#=name.Key#>Icon : BaseIcon { public <#=name.Key#>Icon() : base ("<#=name.Value#>") { } }
<# } #>